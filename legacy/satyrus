#!/usr/bin/python

import os, sys
from optparse import Option, OptionParser, OptionGroup, OptionValueError
from satyruslib import __VERSION__

usage_msg = "usage: %prog [options] file" 
version = __VERSION__

simplify = False

DEFAULT_AMPL_SOLVER = 'bonmin'

# TODO: check python version
# TODO: test SATyrus on windows

def check_sympy(option, opt, value, parser):
  try:
    import sympy
    global simplify
    simplify = True
  except ImportError:
    sys.exit(
"""Error: 'simplify' option requires SymPy library. Yout can get it at 
http://code.google.com/p/sympy/""")

# parsing command line:
cli_parser = OptionParser(usage=usage_msg, version=version)
cli_parser.set_defaults(ampl=False,
                        xpress=False,
                        lower_bound=None,
                        outfiles="out",
                        simplify=False,
                        solver=None)

# general options
cli_parser.add_option("-l", "--lower-bound",
                      dest="lower_bound", metavar="num", 
                      type=float,
                      help="penalties lower bound (this can be any real \
                          number greater or equal to 1)")
cli_parser.add_option("-s", "--simplify",
                      action="callback", callback=check_sympy, 
                      help="simplify the energy function doing things like \
                          x + x => 2*x. Warning: this can be *really* slow")
cli_parser.add_option("-a", "--ampl",
                      action="store_true", dest="ampl",
                      help="generate ampl output (default)")
cli_parser.add_option("-x", "--xpress",
                      action="store_true", dest="xpress",
                      help="generate xpress (mosel) output")
cli_parser.add_option("-o",
                      dest="outfiles", metavar="PREFIX", 
                      help="output files prefix. Default is \'out\', thus, \
                          for ampl output, output files would be 'out.mod\' \
                          and \'out.ampl\'.")

# ampl options
ampl_group = OptionGroup(cli_parser, "AMPL Options")
ampl_group.add_option("--solver",
                      dest="solver",
                      help="which solver will be invoked by AMPL to solve the \
                            energy function. Default is \'%s\'." % \
                                DEFAULT_AMPL_SOLVER)
cli_parser.add_option_group(ampl_group)

options, args = cli_parser.parse_args()

# validating command line: 
if len(args) == 0:
  cli_parser.error(
"""missing file operand
Try `satyrus --help` for more information""")
  
if not options.ampl and not options.xpress:
  options.ampl = True

if options.solver and options.xpress and not options.ampl:
  cli_parser.error("-s (--solver) option can't be used with xpress output")

if options.ampl and not options.solver:
  options.solver = DEFAULT_AMPL_SOLVER

# command line is ok:
input_file = args[0]

def read_input_file():
  try:
    # XXX: is this windows compatible?
    fd = open(input_file)
  except:
    sys.exit("Error: can't open \'%s\' for reading: %s" % (input_file, 
      sys.exc_info()[1]))
  else:
    data = fd.read()
    fd.close()
    return data

# Main
from satyruslib.satparser import SATParser
from satyruslib.satexceptions import *
try:
  data = read_input_file()
  parser = SATParser(
                      data         = data,
                      ampl         = options.ampl,
                      outfiles     = options.outfiles,
                      lower_bound  = options.lower_bound,
                      simplify     = options.simplify,
                      solver       = options.solver,
                      xpress       = options.xpress
                    )
  parser.parse()
except SATError, err_msg:
  sys.exit("Error while parsing \'%s\': %s" % (input_file, err_msg))
except SystemExit:
  raise
except:
  print """\nCongratulations, you have found a bug in SATyrus! Please submit this traceback and what you are doing to bfmonteiro@gmail.com\n"""
  raise

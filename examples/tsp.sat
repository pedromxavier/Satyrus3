#{ ------------------- }
    Exemplo - Satyrus 3
   Caixeiro Viajante
 { ------------------- }#

?prec: 13;

# Dimensão das matrizes
m = 5; # número de vérties

# Matriz de Distâncias
# d[i][j] = 1 sse i é vizinho de j
d[m + 1][m + 1] = {
    (1, 1) : 0, (1, 2) : 1, (1, 3) : 1, (1, 4) : 2, (1, 5) : 1, (1, 6) : 0,
    (2, 1) : 1, (2, 2) : 0, (2, 3) : 1, (2, 4) : 5, (2, 5) : 1, (2, 6) : 1,
    (3, 1) : 1, (3, 2) : 1, (3, 3) : 0, (3, 4) : 1, (3, 5) : 2, (3, 6) : 1,
    (4, 1) : 2, (4, 2) : 5, (4, 3) : 1, (4, 4) : 0, (4, 5) : 1, (4, 6) : 7,
    (5, 1) : 1, (5, 2) : 1, (5, 3) : 2, (5, 4) : 1, (5, 5) : 0, (5, 6) : 1,
    (6, 1) : 0, (6, 2) : 1, (6, 3) : 1, (6, 4) : 7, (6, 5) : 1, (6, 6) : 0
};

# Matriz do tour
tour[m + 1][m + 1];

# Restrição de Integridade
(int) unicidade_posicao_cidade[2]:
    # Não pode ter duas cidades na mesma posição
    @{i = [1:m]} # para cada cidade
    @{j = [1:m], j > i} # para cada outra cidade
    @{k = [1:m]} # para cada posição no tour
    ~(tour[k][i] & tour[k][j]);

(int) unicidade_cidade_posicao[2]:
    # Uma cidade não pode ocupar duas posições
    @{i = [1:m]} # para cada posição no tour
    @{j = [1:m], j > i} # para cada outra posição
    @{k = [1:m]} # para cada cidade
    ~(tour[i][k] & tour[j][k]);

(int) visitar_todas[1]:
    # Todas as cidades devem ser visitadas
    @{i = [1:m]} # para cada cidade
    ${j = [1:m]} # uma posição no tour
    tour[j][i];

(opt) distancia:
    ${i = [1:m]} # para cada par de posições (i, i+1)
    ${j = [1:m]} # para cada cidade
    ${k = [1:m], k > j} # para cada outra cidade
    (tour[i][j] & tour[i + 1][k]) -> d[j][k];
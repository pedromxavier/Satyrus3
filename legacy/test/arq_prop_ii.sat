n=6;
IN(n);
PROOF(n,n,2);
CB(n);
RES(n);
EMPTY(n);
ORIG(n);
CLCOMP(n,n,2);
CBMAP(n,n);
PARENT(n,n,2);
CANCEL(n,n);

IN = [1: 1; 6: 1];
CB = [6: 1];
RES = [1: 1];
EMPTY = [1: 1];
ORIG = [1: 1; 2: 1; 3: 1; 4: 1; 5: 0; 6: 0];
CLCOMP = [
  1,1,1: 1; 
  1,1,2: 0; 
  1,2,1: 0; 
  1,2,2: 1; 
  1,3,1: 0; 
  1,3,2: 0; 
  1,4,1: 0; 
  1,4,2: 0; 
  1,5,1: 0; 
  1,5,2: 0; 
  1,6,1: 0; 
  1,6,2: 0; 

  2,1,1: 0; 
  2,1,2: 0; 
  2,2,1: 0; 
  2,2,2: 1; 
  2,3,1: 1; 
  2,3,2: 0; 
  2,4,1: 0; 
  2,4,2: 0; 
  2,5,1: 0; 
  2,5,2: 0; 
  2,6,1: 0; 
  2,6,2: 0; 

  3,1,1: 0; 
  3,1,2: 1; 
  3,2,1: 0; 
  3,2,2: 0; 
  3,3,1: 0; 
  3,3,2: 0; 
  3,4,1: 0; 
  3,4,2: 0; 
  3,5,1: 0; 
  3,5,2: 0; 
  3,6,1: 0; 
  3,6,2: 0; 

  4,1,1: 0; 
  4,1,2: 0; 
  4,2,1: 1; 
  4,2,2: 0; 
  4,3,1: 0; 
  4,3,2: 0; 
  4,4,1: 0; 
  4,4,2: 0; 
  4,5,1: 0; 
  4,5,2: 0; 
  4,6,1: 0; 
  4,6,2: 0; 

  5,1,1: 0; 
  5,1,2: 0; 
  5,2,1: 0; 
  5,2,2: 0; 
  5,3,1: 0; 
  5,3,2: 0; 
  5,4,1: 0; 
  5,4,2: 0; 
  5,5,1: 0; 
  5,5,2: 0; 
  5,6,1: 0; 
  5,6,2: 0; 

  6,1,1: 0; 
  6,1,2: 0; 
  6,2,1: 0; 
  6,2,2: 0; 
  6,3,1: 0; 
  6,3,2: 0; 
  6,4,1: 0; 
  6,4,2: 0; 
  6,5,1: 0; 
  6,5,2: 0; 
  6,6,1: 0; 
  6,6,2: 0
];

CBMAP = [6,4: 1];
PARENT = [6,4,1: 1];

/*
 * restricoes das estruturas IN e PROOF
 */
intgroup int11: 
  forall{i} where i in (1,n): 
    IN[i] -> CB[i] or RES[i];

intgroup int0: 
  forall{i,j,k} where i in (1,n), j in (1,n), k in (1,2): 
    IN[i] and not EMPTY[i] -> PARENT[i][j][k];

intgroup int11: 
  forall{i,j,k} where i in (1,n), j in (1,n), k in (1,2): 
    IN[i] and EMPTY[i] -> not PARENT[i][j][k];

/*
 * restricoes da clausula
 */
intgroup int0: 
  forall{i,j} where i in (1,n), j in (1,n): 
    CB[i] -> CBMAP[i][j];

intgroup int11: 
  forall{i,j} where i in (1,n), j in (1,n): 
    ORIG[j] and CBMAP[i][j] -> CB[i];

/*
 * restricoes da sintaxe da clausula
 */
intgroup int11: 
  forall{i,j,k,s} where i in (1,n), j in (1,n), k in (1,n), s in (1,2): 
    CBMAP[i][j] and CLCOMP[j][k][s] -> PROOF[i][k][s];

intgroup int11: 
  forall{i,j,k,s} where i in (1,n), j in (1,n), k in (1,n), s in (1,2): 
    CBMAP[i][j] and not CLCOMP[j][k][s] -> not PROOF[i][k][s];

/*
 * restricoes dos passos de resolucao
 */
intgroup int12: 
  forall{i,j,k,l,m} where 
    i in (1,n), j in (1,n), k in (1,n) and j!=k:
    RES[i] -> PARENT[j][i][1] and PARENT[k][i][2];

intgroup int0: 
  forall{i,k} where i in (1,n),k in (1,n): 
    RES[i] -> CANCEL[i][k];

/*
 * restricoes da estrutura PARENT
 */
intgroup int11: 
  forall{i,j,k,l,m,n} where 
    i in (1,n), j in (1,n), k in (1,n), l in (1,n), m in (1,2), 
    p in (1,2) and j!=k, m!=p: 
    PARENT[j][i][1] and PARENT[k][i][2] and PROOF[j][l][m] and PROOF[k][l][p] ->
      CANCEL[i][l];

intgroup int11: 
  forall{i,j,k} where i in (1,n), j in (1,n), k in (1,2): 
    not RES[i] -> not PARENT[j][i][k];

intgroup int11: 
  forall{i,j,k} where i in (1,n), j in (1,n), k in (1,2): 
    PARENT[j][i][k] -> IN[i];

intgroup int11: 
  forall{i,j,k} where i in (1,n), j in (1,n), k in (1,2): 
    PARENT[j][i][k] -> IN[j];

/*
 * restricoes da composicao do resolvente
 */
intgroup int11: 
  forall{i,j,k,l,s} where 
    i in (1,n), j in (1,n), k in (1,n), l in (1,2), s in (1,2) and j!=i: 
      PARENT[j][i][l] and PROOF[j][k][s] and not CANCEL[i][k] ->
        PROOF[i][k][s];

intgroup int11: 
  forall{i,j,k,l,m,p} where 
    i in (1,n), j in (1,n), k in (1,n), l in (1,n), p in (1,2) and j!=k, k!=i:
    PARENT[j][i][1] and PARENT[k][i][2] and not PROOF[j][l][p] and 
      not PROOF[k][l][p] -> not PROOF[i][l][p];

intgroup int11: 
  forall{i,j,s} where i in (1,n), j in (1,n), s in (1,2): 
    CANCEL[i][j] -> not PROOF[i][j][s];

/*
 * restricoes da clausula vazia
 */
intgroup int11: 
  forall{i,j,s} where i in (1,n), j in (1,n), s in (1,2): 
    EMPTY[i] -> not PROOF[i][j][s];

/* XXX ? 
intgroup int11: 
  forall{i,j,s} where i in (1,n), j in (1,n), s in (1,2): 
    PROOF[i][j][s] -> not EMPTY[i]; */

intgroup int11: 
  forall{i} where i in (1,n): 
    EMPTY[i] -> RES[i]; /* not RES[i] ? */

/*
 * restricoes wta
 */
intgroup wta: 
  forall{i,j,s,k} where i in (1,n), j in (1,n), s in (1,2), k in (1,2) 
  and s!=k: 
    PROOF[i][j][s] -> not PROOF[i][j][k];

intgroup wta: 
  forall{i} where i in (1,n): 
    CB[i] -> not RES[i];

intgroup wta: 
  forall{i,j,k} where i in (1,n), j in (1,n), k in (1,n) and j!=k: 
    CBMAP[i][j] -> not CBMAP[i][k];

intgroup wta: 
  forall{i,j,k,l} where 
    i in (1,n), j in (1,n), k in (1,n), l in (1,2) and k!=j: 
    PARENT[j][i][l] -> not PARENT[k][i][l];

intgroup wta: 
  forall{i,j,n,k,l} where 
    i in (1,n), j in (1,n), m in (1,n), k in (1,2), l in (1,2) and i!=m: 
    PARENT[j][i][k] -> not PARENT[j][m][l];

intgroup wta: 
  forall{i,j,k,l} where 
    i in (1,n), j in (1,n), k in (1,2), l in (1,2) and k!=l: 
    PARENT[j][i][k] -> not PARENT[j][i][l];

intgroup wta: 
  forall{i,j,k} where i in (1,n), j in (1,n), k in (1,n) and j!=k: 
    CANCEL[i][j] -> not CANCEL[i][k];

/*
 * penalidades
 */
penalties:
  int0:  level 0, correlation 1;
  int11: level 1, correlation 1;
  int12: level 1, correlation 2;
  wta:   level 2, correlation 1;

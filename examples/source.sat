?prec: 16; # Precision
?alpha: 30;    #
?epsilon: 1E-03;

# Total number of verties in the graph.
n = 5;

# Vector indicates used colors.
col[n];

# Correspondence between each vertex and its color
vc[n][n];

# Graph representation
neigh[n][n] = {
  (1,1) : 0,
  (1,2) : 0,
  (1,3) : 1,
  (1,4) : 1,
  (1,5) : 1,

  (2,1) : 0,
  (2,2) : 0,
  (2,3) : 1,
  (2,4) : 1,
  (2,5) : 1,

  (3,1) : 1,
  (3,2) : 1,
  (3,3) : 0,
  (3,4) : 1,
  (3,5) : 1,

  (4,1) : 1,
  (4,2) : 1,
  (4,3) : 1,
  (4,4) : 0,
  (4,5) : 0,

  (5,1) : 1,
  (5,2) : 1,
  (5,3) : 1,
  (5,4) : 0,
  (5,5) : 0
};

## penalty levels
LOW = 1;
HIGH = 2;

(int) color_all_once[LOW]:
    forall {i = [1:n]}
    forall {k = [1:n]}
    vc[i][k];

(int) use_color[LOW]:
    forall{i = [1:n]}
    forall{k = [1:n]}
    vc[i][k] -> col[k];
    
(int) neighbour_coloring[HIGH]:
    forall{i = [1:n]}
    forall{j = [1:n], j != i}
    forall{k = [1:n]}
    neigh[i][j] -> ~(vc[i][k] & vc[j][k]) + 2;

(opt) cost: ${k = [1:n]} col[k];
